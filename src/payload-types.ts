/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    challenges: Challenge;
    ledger: Ledger;
    Events: Event;
    users: User;
    comments: Comment;
    media: Media;
    avatars: Avatar;
    companies: Company;
    'company-logos': CompanyLogo;
    Products: Product;
    'gift-shop-transactions': GiftShopTransaction;
    'verification-tokens': VerificationToken;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    challenges: {
      challengeComments: 'comments';
    };
    users: {
      ledgerEntries: 'ledger';
      userComments: 'comments';
    };
  };
  collectionsSelect: {
    challenges: ChallengesSelect<false> | ChallengesSelect<true>;
    ledger: LedgerSelect<false> | LedgerSelect<true>;
    Events: EventsSelect<false> | EventsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    comments: CommentsSelect<false> | CommentsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    avatars: AvatarsSelect<false> | AvatarsSelect<true>;
    companies: CompaniesSelect<false> | CompaniesSelect<true>;
    'company-logos': CompanyLogosSelect<false> | CompanyLogosSelect<true>;
    Products: ProductsSelect<false> | ProductsSelect<true>;
    'gift-shop-transactions': GiftShopTransactionsSelect<false> | GiftShopTransactionsSelect<true>;
    'verification-tokens': VerificationTokensSelect<false> | VerificationTokensSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    guide: Guide;
  };
  globalsSelect: {
    guide: GuideSelect<false> | GuideSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "challenges".
 */
export interface Challenge {
  id: number;
  title: string;
  description: string;
  deadline: string;
  points: number;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  slug?: string | null;
  ledger?: (number | Ledger)[] | null;
  challengeComments?: {
    docs?: (number | Comment)[] | null;
    hasNextPage?: boolean | null;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ledger".
 */
export interface Ledger {
  id: number;
  /**
   * User who earned, lost or redeemed points
   */
  user_id: number | User;
  /**
   * Number of points awarded (positive) or deducted (negative)
   */
  amount: number;
  /**
   * Description of why the transaction occurred
   */
  reason: string;
  /**
   * Related challenge, if applicable
   */
  challenge_id?: (number | null) | Challenge;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName?: string | null;
  lastName?: string | null;
  /**
   * e.g. CEO, CTO, etc.
   */
  title?: string | null;
  location?: string | null;
  linkedinUrl?: string | null;
  interactiveDemoUrl?: string | null;
  bio?: string | null;
  company?: (number | null) | Company;
  avatar?: (number | null) | Avatar;
  loginMethod: 'google' | 'email';
  roles?: ('admin' | 'user')[] | null;
  slug?: string | null;
  user_id?: string | null;
  ledgerEntries?: {
    docs?: (number | Ledger)[] | null;
    hasNextPage?: boolean | null;
  } | null;
  userComments?: {
    docs?: (number | Comment)[] | null;
    hasNextPage?: boolean | null;
  } | null;
  /**
   * Whether the user has completed the onboarding process
   */
  onboardingCompleted?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies".
 */
export interface Company {
  id: number;
  /**
   * The name of the company
   */
  name: string;
  /**
   * Company website URL
   */
  website?: string | null;
  /**
   * Who added the company
   */
  author?: (number | null) | User;
  /**
   * Company logo from Brandfetch or other sources
   */
  logoSrc?: (number | null) | CompanyLogo;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company-logos".
 */
export interface CompanyLogo {
  id: number;
  alt?: string | null;
  /**
   * Default logo URL (e.g. from Brandfetch or Navattic logo API)
   */
  defaultUrl?: string | null;
  /**
   * Custom uploaded logo (optional)
   */
  uploadedLogo?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "avatars".
 */
export interface Avatar {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    profile?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments".
 */
export interface Comment {
  id: number;
  content: string;
  user: number | User;
  challenge: number | Challenge;
  parent?: (number | null) | Comment;
  status?: ('pending' | 'approved' | 'rejected') | null;
  deleted?: boolean | null;
  likes?: number | null;
  likedBy?: (number | User)[] | null;
  flaggedReports?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Events".
 */
export interface Event {
  id: number;
  /**
   * The name of the event
   */
  title: string;
  /**
   * Link to the event page
   */
  eventPageUrl: string;
  cta?: {
    /**
     * Label for the CTA button, ex: "Register here"
     */
    label?: string | null;
    /**
     * Link to the venue website or location (optional)
     */
    link?: string | null;
  };
  /**
   * Square aspect ratio image for the event. If not provided, a fallback will be used.
   */
  image: number | Media;
  location: {
    /**
     * Check if this event is a webinar
     */
    isWebinar?: boolean | null;
    /**
     * Name of the venue or online platform
     */
    name: string;
    link?: string | null;
    /**
     * Physical address of the venue. Leave blank and check "Is Webinar" if this is a virtual event.
     */
    address?: string | null;
  };
  date: {
    /**
     * Display format of the date (e.g., "Wednesday, March 5")
     */
    displayDate: string;
    /**
     * Start date and time of the event
     */
    startTime: string;
    /**
     * End date and time of the event
     */
    endTime: string;
    timeZone: 'CDT' | 'CST' | 'EDT' | 'EST' | 'PDT' | 'PST';
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Products".
 */
export interface Product {
  id: number;
  /**
   * The name of the product
   */
  title: string;
  /**
   * Product description (max 185 characters)
   */
  description: string;
  /**
   * Short description of the product for checkout (max 55 characters)
   */
  shortDescription: string;
  /**
   * Price of the product in points (10 points = 1$)
   */
  price: number;
  /**
   * Ideally with a transparent background
   */
  image: number | Media;
  /**
   * Users who have redeemed the product
   */
  redeemedBy?: (number | User)[] | null;
  /**
   * Check if the product is currently available
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gift-shop-transactions".
 */
export interface GiftShopTransaction {
  id: number;
  /**
   * User who redeemed the product
   */
  user: number | User;
  /**
   * Product that was redeemed
   */
  product: number | Product;
  /**
   * Reference to the ledger entry for this redemption
   */
  ledgerEntry: number | Ledger;
  /**
   * Current status of the redemption
   */
  status: 'pending' | 'processing' | 'shipped' | 'delivered' | 'cancelled';
  /**
   * Shipping address for the redeemed product
   */
  shippingAddress?: {
    name?: string | null;
    address?: string | null;
    city?: string | null;
    state?: string | null;
    zipCode?: string | null;
    country?: string | null;
  };
  /**
   * Shipping tracking information
   */
  trackingInfo?: {
    carrier?: string | null;
    trackingNumber?: string | null;
    estimatedDelivery?: string | null;
  };
  /**
   * Internal notes for admins
   */
  adminNotes?: string | null;
  /**
   * Notes from the user (e.g., special requests)
   */
  userNotes?: string | null;
  /**
   * Date when the product was fulfilled
   */
  fulfillmentDate?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "verification-tokens".
 */
export interface VerificationToken {
  id: number;
  identifier: string;
  token: string;
  expires: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'challenges';
        value: number | Challenge;
      } | null)
    | ({
        relationTo: 'ledger';
        value: number | Ledger;
      } | null)
    | ({
        relationTo: 'Events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'comments';
        value: number | Comment;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'avatars';
        value: number | Avatar;
      } | null)
    | ({
        relationTo: 'companies';
        value: number | Company;
      } | null)
    | ({
        relationTo: 'company-logos';
        value: number | CompanyLogo;
      } | null)
    | ({
        relationTo: 'Products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'gift-shop-transactions';
        value: number | GiftShopTransaction;
      } | null)
    | ({
        relationTo: 'verification-tokens';
        value: number | VerificationToken;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "challenges_select".
 */
export interface ChallengesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  deadline?: T;
  points?: T;
  content?: T;
  slug?: T;
  ledger?: T;
  challengeComments?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ledger_select".
 */
export interface LedgerSelect<T extends boolean = true> {
  user_id?: T;
  amount?: T;
  reason?: T;
  challenge_id?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  eventPageUrl?: T;
  cta?:
    | T
    | {
        label?: T;
        link?: T;
      };
  image?: T;
  location?:
    | T
    | {
        isWebinar?: T;
        name?: T;
        link?: T;
        address?: T;
      };
  date?:
    | T
    | {
        displayDate?: T;
        startTime?: T;
        endTime?: T;
        timeZone?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  title?: T;
  location?: T;
  linkedinUrl?: T;
  interactiveDemoUrl?: T;
  bio?: T;
  company?: T;
  avatar?: T;
  loginMethod?: T;
  roles?: T;
  slug?: T;
  user_id?: T;
  ledgerEntries?: T;
  userComments?: T;
  onboardingCompleted?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments_select".
 */
export interface CommentsSelect<T extends boolean = true> {
  content?: T;
  user?: T;
  challenge?: T;
  parent?: T;
  status?: T;
  deleted?: T;
  likes?: T;
  likedBy?: T;
  flaggedReports?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "avatars_select".
 */
export interface AvatarsSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        profile?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies_select".
 */
export interface CompaniesSelect<T extends boolean = true> {
  name?: T;
  website?: T;
  author?: T;
  logoSrc?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company-logos_select".
 */
export interface CompanyLogosSelect<T extends boolean = true> {
  alt?: T;
  defaultUrl?: T;
  uploadedLogo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  shortDescription?: T;
  price?: T;
  image?: T;
  redeemedBy?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gift-shop-transactions_select".
 */
export interface GiftShopTransactionsSelect<T extends boolean = true> {
  user?: T;
  product?: T;
  ledgerEntry?: T;
  status?: T;
  shippingAddress?:
    | T
    | {
        name?: T;
        address?: T;
        city?: T;
        state?: T;
        zipCode?: T;
        country?: T;
      };
  trackingInfo?:
    | T
    | {
        carrier?: T;
        trackingNumber?: T;
        estimatedDelivery?: T;
      };
  adminNotes?: T;
  userNotes?: T;
  fulfillmentDate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "verification-tokens_select".
 */
export interface VerificationTokensSelect<T extends boolean = true> {
  identifier?: T;
  token?: T;
  expires?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guide".
 */
export interface Guide {
  id: number;
  introduction: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  additionalInfo?:
    | {
        icon:
          | 'navattic'
          | 'activity'
          | 'album'
          | 'align-center'
          | 'align-horizontal-space-around'
          | 'align-left'
          | 'align-right'
          | 'align-vertical-space-around'
          | 'aperture'
          | 'app-window'
          | 'archive'
          | 'arrow-big-left'
          | 'arrow-big-right'
          | 'arrow-down-1-0'
          | 'arrow-down-from-line'
          | 'arrow-down-left'
          | 'arrow-down-narrow-wide'
          | 'arrow-down-right'
          | 'arrow-down-wide-narrow'
          | 'arrow-down'
          | 'arrow-left-right'
          | 'arrow-left'
          | 'arrow-right-left'
          | 'arrow-right'
          | 'arrow-up-0-1'
          | 'arrow-up-down'
          | 'arrow-up-from-line'
          | 'arrow-up-left'
          | 'arrow-up-narrow-wide'
          | 'arrow-up-right'
          | 'arrow-up-wide-narrow'
          | 'arrow-up'
          | 'asterisk'
          | 'at-sign'
          | 'audio-lines'
          | 'award'
          | 'badge-check'
          | 'ban'
          | 'bar-chart-2'
          | 'bar-chart'
          | 'baseline'
          | 'bell-dot'
          | 'between-horizontal-start'
          | 'biceps-flexed'
          | 'binary'
          | 'blend'
          | 'blocks'
          | 'bold'
          | 'book-a'
          | 'book-dashed'
          | 'book-marked'
          | 'book-open-check'
          | 'book-open-text'
          | 'book-open'
          | 'book-text'
          | 'book-user'
          | 'book-x'
          | 'book'
          | 'bookmark-x'
          | 'bookmark'
          | 'box'
          | 'boxes'
          | 'brick-wall'
          | 'building-2'
          | 'building'
          | 'calendar-check'
          | 'calendar-clock'
          | 'calendar-days'
          | 'calendar-sync'
          | 'calendar'
          | 'camera'
          | 'case-sensitive'
          | 'case-upper'
          | 'chart-column-decreasing'
          | 'chart-column'
          | 'chart-line'
          | 'chart-no-axes-column-increasing'
          | 'chart-no-axes-column'
          | 'chart-no-axes-combined'
          | 'chart-spline'
          | 'check-circle-2'
          | 'check'
          | 'chevron-down'
          | 'chevron-left'
          | 'chevron-right'
          | 'chevron-up'
          | 'chevrons-left-right'
          | 'chevrons-up-down'
          | 'chrome'
          | 'circle-alert'
          | 'circle-arrow-out-up-right'
          | 'circle-arrow-up'
          | 'circle-check-big'
          | 'circle-check'
          | 'circle-dashed'
          | 'circle-dollar-sign'
          | 'circle-fading-arrow-up'
          | 'circle-fading-plus'
          | 'circle-help'
          | 'circle-play'
          | 'circle-plus'
          | 'circle-user-round'
          | 'circle-user'
          | 'circle-x'
          | 'circle'
          | 'clipboard-signature'
          | 'clipboard-type'
          | 'clipboard'
          | 'clock'
          | 'cloudy'
          | 'code'
          | 'coins'
          | 'columns-2'
          | 'command'
          | 'component'
          | 'contact'
          | 'cookie'
          | 'copy'
          | 'corner-down-left'
          | 'corner-down-right'
          | 'corner-up-right'
          | 'crop'
          | 'database-backup'
          | 'diff'
          | 'disc'
          | 'dollar-sign'
          | 'download'
          | 'droplet'
          | 'ellipsis'
          | 'equal'
          | 'expand'
          | 'external-link'
          | 'eye-off'
          | 'eye'
          | 'facebook'
          | 'file-json-2'
          | 'file-plus'
          | 'file-text'
          | 'file-up'
          | 'file-video-2'
          | 'file'
          | 'filter'
          | 'fingerprint'
          | 'flag-triangle-right'
          | 'flag'
          | 'flip-horizontal'
          | 'folder-plus'
          | 'folder'
          | 'form-input'
          | 'fullscreen'
          | 'gallery-vertical-end'
          | 'gallery-vertical'
          | 'gantt-chart'
          | 'gift'
          | 'git-merge'
          | 'globe-lock'
          | 'globe'
          | 'graduation-cap'
          | 'grid-2x2-plus'
          | 'grid3x3'
          | 'grip-vertical'
          | 'hammer'
          | 'hand-coins'
          | 'hard-drive'
          | 'hash'
          | 'heading-1'
          | 'heading-2'
          | 'heading-3'
          | 'heading-4'
          | 'heading-5'
          | 'heading-6'
          | 'help-circle'
          | 'hotel'
          | 'house'
          | 'id-card'
          | 'image-play'
          | 'image-plus'
          | 'image'
          | 'inbox'
          | 'infinity'
          | 'info'
          | 'italic'
          | 'key-round'
          | 'key'
          | 'keyboard'
          | 'lamp-desk'
          | 'landmark'
          | 'languages'
          | 'laptop'
          | 'layers-2'
          | 'layers'
          | 'layout-dashboard'
          | 'layout-grid'
          | 'layout-panel-left'
          | 'library-big'
          | 'life-buoy'
          | 'lightbulb'
          | 'link-2-off'
          | 'link-2'
          | 'link'
          | 'linkedin'
          | 'list-checks'
          | 'list-end'
          | 'list-filter'
          | 'list-ordered'
          | 'list-restart'
          | 'list-start'
          | 'list-todo'
          | 'list'
          | 'loader'
          | 'locate'
          | 'lock-keyhole-open'
          | 'lock-keyhole'
          | 'lock'
          | 'log-out'
          | 'logs'
          | 'mail'
          | 'map-pin'
          | 'maximize-2'
          | 'maximize'
          | 'medal'
          | 'megaphone'
          | 'menu'
          | 'merge'
          | 'message-circle-reply'
          | 'message-circle'
          | 'message-square-dashed'
          | 'message-square-dot'
          | 'message-square-text'
          | 'message-square'
          | 'messages-square'
          | 'mic'
          | 'minimize-2'
          | 'minimize'
          | 'minus-circle'
          | 'minus'
          | 'monitor'
          | 'moon'
          | 'more-horizontal'
          | 'more-vertical'
          | 'mouse-pointer-click'
          | 'mouse-pointer-square-dashed'
          | 'mouse-pointer-square'
          | 'mouse-pointer'
          | 'move'
          | 'not-equal'
          | 'palette'
          | 'panel-left-open'
          | 'panel-left'
          | 'panel-right-open'
          | 'panel-right'
          | 'panel-top'
          | 'panels-top-left'
          | 'pause'
          | 'pen-line'
          | 'pen'
          | 'pencil-line'
          | 'pencil-ruler'
          | 'pencil'
          | 'phone'
          | 'picture-in-picture-2'
          | 'pin-off'
          | 'pin'
          | 'plane'
          | 'play'
          | 'plug-zap'
          | 'plus-circle'
          | 'plus'
          | 'podcast'
          | 'pointer'
          | 'presentation'
          | 'radio'
          | 'redo-2'
          | 'redo-dot'
          | 'refresh'
          | 'repeat-2'
          | 'repeat'
          | 'replace'
          | 'reply'
          | 'rocket'
          | 'rotate-ccw'
          | 'route'
          | 'ruler-dimension-line'
          | 'salad'
          | 'save'
          | 'scaling'
          | 'scan-heart'
          | 'search-check'
          | 'search'
          | 'send'
          | 'settings'
          | 'shapes'
          | 'share-2'
          | 'share'
          | 'sheet'
          | 'shield-check'
          | 'shield-half'
          | 'shield'
          | 'ship'
          | 'shuffle'
          | 'slack'
          | 'sliders-horizontal'
          | 'sliders-vertical'
          | 'sliders'
          | 'smartphone'
          | 'smile'
          | 'sparkle'
          | 'sparkles'
          | 'speech'
          | 'spinner'
          | 'split'
          | 'square-asterisk'
          | 'square-check-big'
          | 'square-check'
          | 'square-mouse-pointer'
          | 'square-pen'
          | 'square-round-corner'
          | 'square-split-horizontal'
          | 'square-x'
          | 'square'
          | 'star-filled'
          | 'star'
          | 'sticky-note'
          | 'store'
          | 'strikethrough'
          | 'sun'
          | 'swatch-book'
          | 'table-2'
          | 'table'
          | 'tablet-smartphone'
          | 'tag'
          | 'target'
          | 'text-cursor-input'
          | 'text-cursor'
          | 'text-quote'
          | 'thumbs-up-filled'
          | 'thumbs-up'
          | 'ticket'
          | 'timer'
          | 'toggle-right'
          | 'trash-2'
          | 'trash'
          | 'tree-palm'
          | 'trending-up'
          | 'triangle-alert'
          | 'trophy'
          | 'type'
          | 'underline'
          | 'undo-2'
          | 'undo-dot'
          | 'unfold-horizontal'
          | 'unfold-vertical'
          | 'unlock'
          | 'unpin'
          | 'upload'
          | 'user-check'
          | 'user-cog'
          | 'user-pen'
          | 'user-plus'
          | 'user-round-check'
          | 'user-round-pen'
          | 'user-round-plus'
          | 'user-round'
          | 'user-search'
          | 'user-x'
          | 'user'
          | 'users-round'
          | 'users'
          | 'video'
          | 'volume-2'
          | 'volume-off'
          | 'volume-x'
          | 'wand-sparkles'
          | 'warehouse'
          | 'webcam'
          | 'webhook'
          | 'wifi-off'
          | 'wifi'
          | 'wrench'
          | 'x-circle'
          | 'x'
          | 'youtube'
          | 'zap';
        title: string;
        description: string;
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guide_select".
 */
export interface GuideSelect<T extends boolean = true> {
  introduction?: T;
  additionalInfo?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        content?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}